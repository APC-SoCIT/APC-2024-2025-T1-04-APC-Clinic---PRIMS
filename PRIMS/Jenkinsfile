pipeline {
    agent any

    environment {
        APP_CONTAINER = "laravel_app"
        MYSQL_CONTAINER = "mysql_db"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build Containers') {
            steps {
                script {
                    sh 'docker-compose up -d --build'
                }
            }
        }

        stage('Wait for Services') {
            steps {
                script {
                    echo "Waiting for MySQL to be ready..."
                    sh '''
                    until docker exec -T ${MYSQL_CONTAINER} mysqladmin ping -h "localhost" -uroot -proot --silent; do
                        echo "Waiting..."
                        sleep 2
                    done
                    echo "MySQL is up!"
                    '''
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh "docker exec -T ${APP_CONTAINER} bash -c 'composer install --no-interaction --prefer-dist --optimize-autoloader'"
                }
            }
        }

        stage('Prepare Database') {
            steps {
                script {
                    sh """
                    docker exec -T ${APP_CONTAINER} bash -c '
                        php artisan key:generate
                        php artisan migrate:fresh --seed
                    '
                    """
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh "docker exec -T ${APP_CONTAINER} bash -c 'php artisan test'"
                }
            }
        }

        stage('Build Frontend') {
            steps {
                script {
                    sh "docker exec -T ${APP_CONTAINER} bash -c 'npm install && npm run build'"
                }
            }
        }
    }

    post {
        always {
            script {
                echo "Shutting down containers..."
                sh "docker-compose down"
            }
        }
    }
}
