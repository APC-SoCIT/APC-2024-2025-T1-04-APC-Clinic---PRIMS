pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "wonderpets-prims:${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Install Dependencies') {
            steps {
                sh '''
                docker run --rm -u $(id -u):$(id -g) \
                -v $(pwd):/var/www/html -w /var/www/html \
                laravelsail/php82-composer:latest \
                composer install --no-interaction --prefer-dist
                '''
            }
        }

        stage('Run Migrations & Key') {
            steps {
                sh '''
                docker run --rm -u $(id -u):$(id -g) \
                -v $(pwd):/var/www/html -w /var/www/html \
                laravelsail/php82-composer:latest \
                php artisan key:generate
                docker run --rm -u $(id -u):$(id -g) \
                -v $(pwd):/var/www/html -w /var/www/html \
                laravelsail/php82-composer:latest \
                php artisan migrate:fresh --seed
                '''
            }
        }

        stage('Frontend Build') {
            steps {
                sh '''
                docker run --rm -u $(id -u):$(id -g) \
                -v $(pwd):/var/www/html -w /var/www/html node:20-alpine \
                sh -c "npm install && npm run build"
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                docker run --rm -u $(id -u):$(id -g) \
                -v $(pwd):/var/www/html -w /var/www/html \
                laravelsail/php82-composer:latest \
                php artisan test
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }
    }
}
